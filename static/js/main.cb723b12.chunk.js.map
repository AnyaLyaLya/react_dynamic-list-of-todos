{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","api.ts","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","onSelect","className","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","search","onSearch","select","value","onChange","event","target","placeholder","style","pointerEvents","Loader","TodoModal","user","onClose","href","email","name","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","App","useState","setTodos","setSelectedTodo","setUser","setSearch","setSelect","useEffect","data","userId","resetSelectedTodo","useCallback","handleSelect","selectFilter","handleSearch","searchFilter","visibleTodos","filterCondition","searchCheck","toLocaleLowerCase","includes","filter","filteredTodos","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cb723b12.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  onSelect: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  onSelect,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map((todo) => (\n        <tr key={todo.id} data-cy=\"todo\" className=\"\">\n          <td className=\"is-vcentered\">{todo.id}</td>\n\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n\n          <td className=\"is-vcentered is-expanded\">\n            <p className={classNames({ 'has-text-danger': !todo.completed },\n              { 'has-text-success': todo.completed })}\n            >\n              {todo.title}\n            </p>\n          </td>\n\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onSelect(todo)}\n            >\n              <span className=\"icon\">\n                <i className={classNames('fas',\n                  { 'fa-eye': !selectedTodo },\n                  { 'fa-eye-slash': selectedTodo })}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","type Props = {\n  select: string;\n  onSelect: (select: string) => void;\n  search: string;\n  onSearch: (search: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  search,\n  onSearch,\n  select,\n  onSelect,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={select}\n          onChange={(event) => onSelect(event.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={search}\n        onChange={(event) => onSearch(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {search && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          { /* eslint-disable-next-line jsx-a11y/control-has-associated-label */ }\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => onSearch('')}\n          />\n        </span>\n      )}\n\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  user: User | null;\n  todo: Todo | null;\n  onClose: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  user,\n  todo,\n  onClose,\n}) => {\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {user ? (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onClose()}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      ) : (\n        <Loader />\n      )}\n    </div>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import { useCallback, useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos, getUser } from './api';\nimport { User } from './types/User';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [user, setUser] = useState<User | null>(null);\n  const [search, setSearch] = useState<string>('');\n  const [select, setSelect] = useState<string>('all');\n\n  useEffect(() => {\n    getTodos().then((data) => setTodos(data));\n  }, []);\n\n  useEffect(() => {\n    if (selectedTodo) {\n      getUser(selectedTodo.userId).then((data) => setUser(data));\n    }\n  }, [selectedTodo]);\n\n  const resetSelectedTodo = useCallback(() => {\n    setSelectedTodo(null);\n    setUser(null);\n  }, []);\n\n  const handleSelect = useCallback((selectFilter) => {\n    setSelect(selectFilter);\n  }, []);\n\n  const handleSearch = useCallback((searchFilter) => {\n    setSearch(searchFilter);\n  }, []);\n\n  const filterTodos = (filterCondition: (todo: Todo) => boolean) => {\n    return todos.filter(filterCondition);\n  };\n\n  const filteredTodos = useCallback((\n    selectFilter: string,\n    searchFilter: string,\n  ) => {\n    return filterTodos((todo: Todo) => {\n      const searchCheck = todo.title.toLocaleLowerCase()\n        .includes(searchFilter.toLocaleLowerCase());\n\n      switch (selectFilter) {\n        case 'all':\n          return searchCheck;\n        case 'active':\n          return searchCheck && !todo.completed;\n        case 'completed':\n          return searchCheck && todo.completed;\n        default:\n          return searchCheck;\n      }\n    });\n  }, [todos, search, select]);\n\n  const visibleTodos = filteredTodos(select, search);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                select={select}\n                onSelect={handleSelect}\n                search={search}\n                onSearch={handleSearch}\n              />\n            </div>\n\n            <div className=\"block\">\n              {visibleTodos.length > 0 ? (\n                <TodoList\n                  todos={visibleTodos}\n                  selectedTodo={selectedTodo}\n                  onSelect={setSelectedTodo}\n                />\n              ) : (\n                <Loader />\n              )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo && (\n        <TodoModal\n          user={user}\n          todo={selectedTodo}\n          onClose={resetSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}